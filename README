
  CPU Design
  **********

                                .
            HIGHER-HALF         .     LOWER-HALF
                                .
                                .
                      TRI-STATE . TRI-STATE
                         BUS    .    BUS
             ___          _     .     _          ___
            |   |/|____|\| |    .    | |/|____|\|   |
            | S |  ____  | |    .    | |  ____  | S |
            |___|\|    |/| |    .    | |\|    |/|___|
            SHIFT        | |    .    | |        SHIFT
          REGISTER       | |    .    | |      REGISTER
        ________         | |    .    | |         ________
       | LOGIC  |/|____|\| |    .    | |/|____|\| LOGIC  |
       | MODULE |  ____  | |    .    | |  ____  | MODULE |
       |________|\|    |/| |    .    | |\|    |/|________|
        ________         | |    .    | |         ________
       | ADDER  |/|____|\| |    .    | |/|____|\| ADDER  |
       | MODULE |  ____  | |    .    | |  ____  | MODULE |
       |________|\|    |/| |    .    | |\|    |/|________|
     ___________         | |    .    | |         ___________
    | CONSTANTS |/|____|\| |    .    | |/|____|\| CONSTANTS |
    |  MODULE   |  ____  | |    .    | |  ____  |  MODULE   |
    |___________|\|    |/| |    .    | |\|    |/|___________|
      __________         | |    .    | |         __________
     | REGISTER |/|____|\| |    .    | |/|____|\| REGISTER |
     |  MODULE  |  ____  | |    .    | |  ____  |  MODULE  |
     |__________|\|    |/| |    .    | |\|    |/|__________|
                        _| |_   .   _| |_
                      __\___/_______\___/__
                     |                     |
                     |    MERGING LOGIC    |
                     |_____________________|
                     |                     |
                     |    CONTROL LOGIC    |
                     |_____________________|
                       /_   _\     /_   _\
                         | |         | |
                         | |         | |
                        _| |_       _| |_
                       _\___/_     _\___/_
                      |       |   |       |
                      |  RAM  |   |  I/O  |
                      |_______|   |_______|



    Most of the CPU utilizes a bit-slice design and consits of individual
    8 bit modules that can be cascaded. The 8 bit modules are wired to a
    common bus using 2*20 pin connectors. The central control logic has to
    merge two such busses in order to build a 16 bit CPU.

    The module bus itself consits of an 8 bit tri-state data bus and a bunch
    of control lines.

    Every modules has two temporary operand registers, A and B. There are two
    control lines for the operand registers, one for all A registers and one
    for all B registers. A rising edge on one of those lines causes all
    modules to latch the current data bus word into the A or B register.

    The result generated by each module is "held back" by a tri-state buffer.
    Every board can be triggered individually to write its output onto the
    data bus.

  1) Shift register module

     BUS
     | | SOUT
     | |<---------+
     | |          |
     | |/|________|__________________________
     | |  _________________________________  |
     | |\|   ___  |LSB      ___________    | |
     | |__|\|   |_|______|\|           |___| |
     | |__  | A |___   __  | Tri-state |___  |
     | |  |/|___|   | |  |/|   Buffer  |   | |
     | |            | |    |___________|   | |
     | |            | |     ___________    | |
     | |            | |__|\|           |___| |
     | |            |____  | Tri-state |_____|
     | | SIN             |/|   Buffer  |
     | |------------------>|___________|
     | |              MSB

    The shift register module contains only an A register (74HC574), connected
    to a 74HC245 output buffer, displaced by one line to implement a right
    shift operation. The MSB of the 74HC245 input is connected with the SIN
    line of the bus to ripple the LSB of the next stage through, while the LSB
    of the 74HC574 is connected to the SOUT line of the bus to get rippled
    through to the next lower stage.

    There is a second 74HC245, connected directly to the 74HC574 without
    displacement to allow the register to be used as temporary register for
    intermediate results. The two buffers can be triggered seperately, the
    shift buffer via the bus SHIFT line, the temporary register buffer via the
    bus TEMP line.

    The module only implements right shift/rotate as a left shift/rotate can
    be implemented by adding a number to itself.

  2) Logic module

     BUS
     | |
     | |/|_____________________________________________
     | |  ___________________________________________  |
     | |\|   ___      __________      ___________    | |
     | |__|\|   |__|\|          |    |           |___| |
     | |__  | A |__  | Bitwise  |__|\| Tri-state |_____|
     | |  |/|___|  |/|  Logic   |__  |   Buffer  |
     | |__|\|   |__|\| Function |  |/|___________|
     | |__  | B |__  |          |
     | |  |/|___|  |/|__________|
     | |


    The logic module has the A and B registers wired up to two 74HC logic
    gate ICs, like a 74HC08, 74HC32, 74HC86 or anything pin compatible.

    The logic module output enable is connected to a set of jumpers, allowing
    one of four control lines to be used, so multiple logic modules with
    different logic gates can be installed in a system.

  3) Adder module

     BUS
     | |
     | |/|_______________________________________________________
     | |  _____________________________________________________  |
     | |\|             ___      _____           ___________    | |
     | |____________|\|   |__|\|     \         |           |___| |
     | |____________  | A |__  |__    \ _____|\| Tri-state |_____|
     | |    _____   |/|___|  |/   \ +  \_____  |   Buffer  |
     | |_|\|     |__|\|   |__|\ __/    /     |/|___________|
     | |_  | NOT |__  | B |__  |      /
     | | |/|_____|  |/|___|  |/|_____/
     | |


    The adder module feeds the A and B register through two cascaded 74HC283
    adder ICs.

    In addition to the A, B and output control lines, the adder module has the
    total carry input and carry output connected to the bus to allow cascading
    of multiple adder modules.

    An additional control line allows the B register to be inverted BEFORE
    being latched, allowing the adder to be used for twos complement
    subtracting.

  4) Register module

    BUS
    | |/|_____________
    | |  __________   |
    | |\|          |  |
    | |      ____  |  |
    | |___|\|    |_|  |
    |  ___  | R0 |_   |
    | |   |/|____| |  |
    | |      ____  |  |
    | |___|\|    |_|  |
    |  ___  | R1 |_   |
    | |   |/|____| |  |
    | |             \/
    | |      ....  .  .
    | |      ____  .  .
    | |___|\|    |_|\/|
    |  ___  | R7 |____|
    | |   |/|____|
    | |

    The register module has a total of 8 74HC574 registers wired up in
    parallel and connected to the data bus.

    A 3 bit read and a 3 bit write select are decoded by two 74HC138 ICs,
    with one negative enable control line for each connected to the bus.

    This setup allows latching bus contents to an arbitrary register, writing
    an arbitrary register to the bus, or transfering data from one register
    to another in a single step.

  5) Constant module

                                        VCC
    BUS                                  A
    | |     ___________    Diode Matrix  |
    | |    |           |---|-|-|-|-|-|-|-+
    | |    |           |---|-|-|-|-|-|-|-+
    | |/|__|           |---|-|-|-|-|-|-|-+
    | |  __| Tri-state |---|-|-|-|-|-|-|-+
    | |\|  |   Buffer  |---|-|-|-|-|-|-|-+
    | |    |           |---|-|-|-|-|-|-|-+
    | |    |           |---|-|-|-|-|-|-|-+
    | |    |___________|---|-|-|-|-|-|-|-+
    | |                   _|_|_|_|_|_|_|_
    | |                  |               |
    | |----------------->| Column-Select |
    | |                  |_______________|


    The constant module allows writing numeric constants to the bus. It reuses
    the read select lines of the register module to select a constant.
    A 74HC138 is used to decode the selected constant through a diode matrix.

    Since the constant values are different for lower and higher order bytes,
    the diode rows have to be soldered in different ways for the intended use
    of the module.

    The currently intended constants are:

        000:  0
        001: +1
        010: -1
        011: +2
        100: -2
        101:
        110:
        110:

